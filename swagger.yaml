openapi: 3.0.0
info:
  title: Template Repo TS REST API
  description: Template Repo TS REST API.
  version: 1.0.0
paths:
  /cat/create-cat:
    post:
      security:
        - APIKey: []
      summary: Create a new cat
      description: Create cat document
      tags:
        - Cat management
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewCatBody'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  catId:
                    $ref: '#/components/schemas/MongoObjectId'
        '400':
          description: Incorrect Request
        '500':
          description: Internal Server Error
  /cat/get-cat-basic-info:
    post:
      security:
        - APIKey: [ ]
      summary: Get basic info for cat
      description: Return basic fields for given catId, requires user with access to ownerId
      tags:
        - Cat results
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                catId:
                  $ref: '#/components/schemas/MongoObjectId'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatBasicInfo'
        '400':
          description: Incorrect Request
        '404':
          description: Cat not found
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    APIKey:
      description: "JWT Token"
      type: "apiKey"
      name: "Authorization"
      in: "header"
  schemas:
    CreateNewCatBody:
      required:
        - ownerId
        - modelType
      type: object
      properties:
        ownerId:
          type: string
        startDate:
          # Format: https://en.wikipedia.org/wiki/ISO_8601
          type: string
          example: 2020-03-09
        endDate:
          # Format: https://en.wikipedia.org/wiki/ISO_8601
          type: string
          example: 2020-03-09
        modelType:
          $ref: '#/components/schemas/catType'
    catType:
      type: string
      enum: ['GRUMPY', 'WEIRD', 'PRETTY']
    CatBasicInfo:
      type: object
      properties:
        catId:
          $ref: '#/components/schemas/MongoObjectId'
        ownerId:
          $ref: '#/components/schemas/MongoObjectId'
        startDate:
          # Format: https://en.wikipedia.org/wiki/ISO_8601
          type: string
          example: 2020-03-09
        endDate:
          # Format: https://en.wikipedia.org/wiki/ISO_8601
          type: string
          example: 2020-03-09
        timestamp:
          # Format: https://en.wikipedia.org/wiki/ISO_8601
          type: string
          example: 2020-03-09
        catType:
          $ref: '#/components/schemas/catType'
        finished:
          type: boolean
    MongoObjectId:
      type: string
      pattern: '/^[a-f\d]{24}$/i'
