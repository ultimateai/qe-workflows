name: Production Sanity Tests

on:
  workflow_call:
    inputs:
      e2e_repo:
        required: true
        type: string
        description: "Owner and repo name containing your production test like ultimateai/e2e-tests"
    outputs:
      report_link:
        description: "The link of the bucket containing the zip with the results"
        value: ${{ jobs.announce.outputs.report_link }}
      test_result:
        description: "The result of the test to be used in Slack"
        value: ${{ jobs.production-test.outputs.test_result }}

env:
  E2E_REPO: ${{ inputs.e2e_repo }}
  BUCKET_NAME: "ultimate-e2e-artifacts"

jobs:
  production-test:
    name: 'Production Sanity Tests'
    runs-on: qe-runners
    outputs:
      test_result: ${{ steps.analyse-results.outputs.test_result }}
    permissions:
      contents: "read"
      id-token: "write"
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: "Checkout e2e-tests repository"
        uses: actions/checkout@v4
        with:
          repository: ${{ env.E2E_REPO }}
          token: ${{ secrets.QE_TOKEN }}
      - name: Install playwright
        run: npm ci
      - name: Run tests
        run: |
          touch results.log
          echo '```logtalk' >> results.log
          PLAYWRIGHT_JSON_OUTPUT_NAME=results.json             
          npx playwright test --project=production --reporter=html,json
          echo '```' >> results.log
        env:
          DASHBOARD_PRODUCTION_USER_PWD: ${{secrets.DASHBOARD_PRODUCTION_USER_PWD}}
          SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.PLAYWRIGHT_SLACK_BOT_USER_OAUTH_TOKEN }}

      - name: Analyse test result
        id: analyse-results
        run: |
          npx playwright-slack-report --config="./cli_config.json" --json-results="./results.json"
          overallStatus=$(cat overallStatus)
          echo "test_result=${overallStatus}" >> GITHUB_ENV

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: production-test-report
          path: |
            playwright-report/**
            results.json
          retention-days: 1
  
  upload-report-to-bucket:
    runs-on: qe-runners
    needs: production-test
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Download test reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-test-report
          path: production-test-report

      - name: Google Auth
        if: always()
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: '${{ secrets.WIF_PROVIDER_NAME }}'
          service_account: '${{ secrets.GSA_QE_EMAIL }}'
          project_id: '${{ secrets.E2E_BUCKET_PROJECT_ID }}'
  
      - name: Get current date
        run: |
          currentDate=$(date '+%Y%m%d')
          echo "CURRENT_DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV

      - name: Upload test results
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          gzip: false
          path: production-test-report/
          destination: >-
            ${{ env.BUCKET_NAME }}/e2e-tests/production-sanity-tests/${{ env.CURRENT_DATE }}/${{ github.run_id }}/on-demand/

  announce:
    runs-on: qe-runners
    needs: upload-report-to-bucket
    if: always()
    outputs:
      report_link: ${{ steps.announcement.outputs.report_link }}
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
      - name: Announce in job
        if: always()
        id: announcement
        run: |
          currentDate=$(date '+%Y%m%d')
          echo "Your artifact is in [this gcp bucket](https://console.cloud.google.com/storage/browser/${{ env.BUCKET_NAME }}/e2e-tests/production-sanity-tests/$currentDate/${{ github.run_id }}/on-demand/production-test-report/playwright-report/) " >> $GITHUB_STEP_SUMMARY
          echo "report_link=https://e2e.ultimate.ai/e2e-tests/production-sanity-tests/$currentDate/${{ github.run_id }}/on-demand/production-test-report/playwright-report/index.html" >> $GITHUB_OUTPUT