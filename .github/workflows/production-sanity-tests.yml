name: Production Sanity Tests

on:
  workflow_call:
    inputs:
      e2e_repo:
        required: true
        type: string
        description: "Owner and repo name containing your production test like ultimateai/e2e-tests"
      e2e_bucket_name:
        required: true
        type: string
        description: "Name of bucket in which to store e2e results"
      project_id:
        required: true
        type: string
        description: "GCP Project ID"      
    outputs:
      bucket_link:
        description: "The link of the bucket containing the zip with the results"
        value: ${{ jobs.announce.outputs.bucket_link }}

env:
  E2E_REPO: ${{ inputs.e2e_repo }}
  BUCKET_NAME: ${{ inputs.e2e_bucket_name }}
  PROJECT_ID: ${{inputs.project_id}}

jobs:
  production-test:
    name: 'Production Sanity Tests'
    runs-on: qe-runners
    permissions:
      contents: "read"
      id-token: "write"
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: "Checkout e2e-tests repository"
        uses: actions/checkout@v4
        with:
          repository: ${{ env.E2E_REPO }}
          token: ${{ secrets.QE_TOKEN }}
      - name: Install playwright
        run: npm ci
      - name: Run tests
        run: |
          npx playwright test --project=production --reporter=html,json
          echo "Test results for Production test run completed" >> results.log
        env:
          DASHBOARD_PRODUCTION_USER_PWD: ${{secrets.DASHBOARD_PRODUCTION_USER_PWD}}
          SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.PLAYWRIGHT_SLACK_BOT_USER_OAUTH_TOKEN }}

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: production-test-report
          path: blob-report
          retention-days: 1
  
  upload-report-to-bucket:
    runs-on: qe-runners
    needs: production-test
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Download test reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-test-report
          path: production-test-report

      - name: Google Auth
        if: always()
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: '${{ secrets.WIF_PROVIDER_NAME }}'
          service_account: '${{ secrets.GSA_QE_EMAIL }}'
          project_id: '${{ env.PROJECT_ID }}'

      - name: Set up Cloud SDK
        if: always()
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: '${{ env.PROJECT_ID }}'
          install_components: alpha
  
      - name: Get current date
        run: |
          currentDate=$(date '+%Y%m%d')
          echo "CURRENT_DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV

      - name: Upload test results
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          gzip: false
          path: playwright-report/
          destination: >-
            ${{ env.BUCKET_NAME }}/${{ github.event.repository.name }}/${{
            env.CURRENT_DATE }}/${{ github.run_id }}/on-demand/
          if: always()
          id: upload_to_bucket

  announce:
    runs-on: qe-runners
    needs: upload-report-to-bucket
    if: always()
    outputs:
      bucket_link: ${{ steps.announcement.outputs.bucket_link }}
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
      - name: Announce in job
        if: always()
        id: announcement
        run: |
          currentDate=$(date '+%Y%m%d')
          echo "Your artifact is in [this gcp bucket](https://console.cloud.google.com/storage/browser/${{ env.BUCKET_NAME }}/${{ github.event.repository.name }}/$currentDate/) " >> $GITHUB_STEP_SUMMARY
          echo "bucket_link=https://console.cloud.google.com/storage/browser/${{ env.BUCKET_NAME }}/${{ github.event.repository.name }}/$currentDate/" >> $GITHUB_OUTPUT







    
