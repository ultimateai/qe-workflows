name: Production Sanity Tests

on:
  workflow_call:
    inputs:
      e2e_repo:
        required: true
        type: string
        description: "Owner and repo name containing your production test like ultimateai/e2e-tests"
    outputs:
      bucket_link:
        description: "The link of the bucket containing the zip with the results"
        value: ${{ jobs.announce.outputs.bucket_link }}
  workflow_dispatch:
    inputs:
      e2e_repo:
        description: "Owner and repo name containing your production test like ultimateai/e2e-tests"
        required: true
        default: "ultimateai/e2e-tests"
      e2e_bucket_name:
        description: "The name of the bucket to upload the test results"
        required: true
        default: "ultimate-e2e-artifacts"
        
env:
  E2E_REPO: ${{ inputs.e2e_repo }}
  BUCKET_NAME: ${{ inputs.e2e_bucket_name }}
  PROJECT_ID: "common-main-cfc4"

jobs:
  production-test:
    name: 'Production Sanity Tests'
    runs-on: qe-runners
    permissions:
      contents: "read"
      id-token: "write"
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: "Checkout e2e-tests repository"
        uses: actions/checkout@v4
        with:
          repository: ${{ env.E2E_REPO }}
          token: ${{ secrets.QE_TOKEN }}
      - name: Install playwright
        run: npm ci
      - name: Run tests
        run: |
          touch results.txt
          npx playwright test --project=production
          echo "Test results for Production test" > results.txt
        env:
          DASHBOARD_PRODUCTION_USER_PWD: ${{secrets.DASHBOARD_PRODUCTION_USER_PWD}}
          SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.PLAYWRIGHT_SLACK_BOT_USER_OAUTH_TOKEN }}

      - name: Upload test report
        # if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: production_test_report
          path: results.txt
          retention-days: 1
  
  upload-report-to-bucket:
    runs-on: qe-runners
    needs: production-test
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Download test reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: production_test_report
          path: production_test_report

      - name: "Google Auth"
        if: always()
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER_NAME }}"
          service_account: "${{ secrets.GSA_QE_EMAIL }}"
          project_id: "${{ env.PROJECT_ID }}"
  
      - name: Upload test results
        if: always()
        id: upload_to_bucket
        run: |
          currentDate=$(date '+%Y%m%d')
          currentTime=$(date '+%H:%M')
          zip -r playwright-all-results-$currentTime.zip test-results/ results.log playwright-report/ /home/runner/.npm/_logs
          gcloud alpha storage cp playwright-all-results-$currentTime.zip gs://${{ env.BUCKET_NAME }}/${{ github.event.repository.name }}/$currentDate/
  
  announce:
    runs-on: qe-runners
    needs: upload-report-to-bucket
    if: always()
    outputs:
      bucket_link: ${{ steps.announcement.outputs.bucket_link }}
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
      - name: Announce in job
        if: always()
        id: announcement
        run: |
          currentDate=$(date '+%Y%m%d')
          echo "Your artifact is in [this gcp bucket](https://console.cloud.google.com/storage/browser/${{ env.BUCKET_NAME }}/${{ github.event.repository.name }}/$currentDate/) " >> $GITHUB_STEP_SUMMARY
          echo "bucket_link=https://console.cloud.google.com/storage/browser/${{ env.BUCKET_NAME }}/${{ github.event.repository.name }}/$currentDate/" >> $GITHUB_OUTPUT







    